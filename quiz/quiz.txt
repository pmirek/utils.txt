Title: Linux Basics

Description: Simple test based on what can be found on the web and some extras.

QuestionS: Which one is from outer world
ok: <pre>hsh</pre>
wr: <pre>csh</pre>
wr: <pre>ksh</pre>
wr: <pre>bash</pre>
---

QuestionM: Which commands are syntactically correct (2 answers)
ok: <pre>ls -ld a* b*</pre>
wr: <pre>ls -l-d a* b*</pre>
ok: <pre>ls -l -d a* b*</pre>
wr: <pre>ls -l a* -d b*</pre>
---

QuestionS: Following commands have been entered one after the other. Indicate which output is generated by the last command.<pre>$ mkdir a<br>$ cd a<br>$ ps > a<br>$ ls > b<br>$ cat b a</pre>
wr: <pre>Error !</pre>
wr: <pre>PID TTY TIME CMD<br>29362 pts/3 0:00 -ksh<br>92598 pts/3 0:00 ps<br>a<br>b</pre>
ok: <pre>a<br>b<br>PID TTY TIME CMD<br>29362 pts/3 0:00 -ksh<br>92598 pts/3 0:00 ps</pre>
wr: <pre>a<br>PID TTY TIME CMD<br>29362 pts/3 0:00 -ksh<br>92598 pts/3 0:00 ps</pre>
wr: <pre>PID TTY TIME CMD<br>29362 pts/3 0:00 -ksh<br>92598 pts/3 0:00 ps<br>a</pre>
---

QuestionS: Which are the four navigation keys in "vi"?
ok: <pre>h - j - k - l</pre>
wr: <pre>l - u - d - r</pre>
wr: <pre>h - u - n - j</pre>
wr: <pre>a - q - s - d</pre>
---

QuestionS: In "vi", which key combination has an other effect than the three others?
wr: <pre>G</pre>
wr: <pre>$G</pre>
ok: <pre>$</pre>
wr: <pre>:$ <enter></pre>
---

QuestionS: I am in "vi" in command mode and I want to see the file list of a directory. For this I use the following command (most efficient solution):
wr: <pre><esc> :! ls -l <enter></pre>
ok: <pre>:!ls +enter+</pre>
wr: <pre>:ls +enter+</pre>
wr: <pre>This is not possible without closing "vi"</pre>
---

QuestionS: Look at the result below and answer the following three questions.<pre>-rw-r--r-- 2 tb00029 staff 74 Dec 26 16:50 a<br>-rw-r--r-- 1 tb00029 staff 0 Dec 26 16:50 b<br>drwxr-xr-x 2 tb00029 staff 512 Dec 26 16:50 c<br>-rw-r--r-- 2 tb00029 staff 74 Dec 26 16:50 d<br>lrwxrwxrwx 1 tb00029 staff 1 Dec 26 16:51 e -> c<br><pre><br>Which command may have produced these lines?
ok: <pre>ls -l</pre>
wr: <pre>ls -al</pre>
wr: <pre>ls -pl</pre>
wr: <pre>ls -pe</pre>
---

QuestionM: Which commands may have created file b? (2 answers)<pre>-rw-r--r-- 1 tb00029 staff 0 Dec 26 16:50 b</pre>
ok: <pre>>b</pre>
wr: <pre>cat < b</pre>
wr: <pre>cat | b</pre>
ok: <pre>touch b</pre>
---

QuestionS: How has file d been created?<pre>-rw-r--r-- 2 tb00029 staff 74 Dec 26 16:50 a<br>-rw-r--r-- 2 tb00029 staff 74 Dec 26 16:50 d</pre>
wr: <pre>>d</pre>
wr: <pre>touch d</pre>
wr: <pre>cat < d</pre>
wr: <pre>cp a d</pre>
ok: <pre>ln a d</pre>
wr: <pre>ln -s a d</pre>
---

QuestionS: Starting from any directory, which command must be entered to return immediately to one's home directory?
wr: <pre>cd . <enter></pre>
wr: <pre>cd - <enter></pre>
ok: <pre>cd <enter></pre>
wr: <pre>cd HOME <enter></pre>
---

QuestionS: To copy all files starting with "a" into the subdirectory "c", use command:
ok: <pre>cp a* c</pre>
wr: <pre>cp a? c/</pre>
wr: <pre>cp a[*] c</pre>
wr: <pre>mv a? /c/a</pre>
wr: <pre>cp a* /c/a</pre>
wr: <pre>mv a* c/</pre>
---

QuestionM: Which command was entered to change the file permissions of "a" from the first to the second form? (2 answers)<pre>-rw-r--r-- 2 tb00029 staff 74 Dec 26 16:50 a<br>......<br>-rwxrw---x 2 tb00029 staff 74 Dec 26 16:50 a</pre>
ok: <pre>chmod 761 a</pre>
wr: <pre>chmod 167</pre>
wr: <pre>chmod +124 a</pre>
ok: <pre>chmod ou+x,g+w,o-r a</pre>
wr: <pre>chmod u+x a; chmod o+x;</pre>
wr: <pre>none of the above</pre>
wr: <pre>This is impossible with a single command. One needs a command to remove permissions and one to add permissions back</pre>
---

QuestionS: Which command may give the following result?<pre>PID TTY TIME CMD<br>35622 pts/0 0:01 -ksh<br>46828 pts/0 0:00 ps<br>Tue Nov 27 14:38:26 NFT 2005<br>Socrates</pre>
wr: <pre>ps#date#hostname</pre>
wr: <pre>ps|date|hostname</pre>
wr: <pre>ps>date>hostname</pre>
ok: <pre>ps;date;hostname</pre>
wr: <pre>ps/date/hostname</pre>
---

QuestionS: For the following situation:<pre>$ls<br>abc abc1 abc11 abc13 abc2 abc3</pre>What will be the output of the following command?<pre>$ls abc[13]</pre>
ok: <pre>abc1 abc3</pre>
wr: <pre>abc1 abc2 abc3 abc13</pre>
wr: <pre>abc1 abc13 abc3</pre>
wr: <pre>abc1 abc2 abc3</pre>
wr: <pre>abc abc1 abc13 abc3</pre>
---

QuestionS: Which command permits to know how many connections (result in digits only) are currently being used by user "root"?
ok: <pre>who|grep root|wc -l</pre>
wr: <pre>who > grep root|wc -l</pre>
wr: <pre>who|grep root>wc -l</pre>
wr: <pre>who|grep >/dev/null|wc -l</pre>
wr: <pre>grep root|who|wc -l</pre>
wr: <pre>wc -l|grep root|who</pre>
wr: <pre>wc -l<grep root<who</pre>
---

QuestionS: Knowing the following result:<pre>echo $abc<br>Tue Nov 27 14:38:26 NFT 2005</pre>Which command was used to initialise the variable "abc" with bash or Korn shell?
wr: <pre>set abc=date</pre>
wr: <pre>abc=date</pre>
wr: <pre>abc="date"</pre>
wr: <pre>$abc=$date</pre>
ok: <pre>abc=$(date)</pre>
wr: <pre>abc=exec(date)</pre>
wr: <pre>$abc=(date)</pre>
---

QuestionS: Give the sequence of key presses and command to enter to run the script named "s" in background, then bring it to foreground, and finally interrupt and kill it.
wr: <pre>s&<br>ctrl-z<br>fg %1<br>stop %1</pre>
wr: <pre>s&<br>ctrl-z<br>fg %1<br>stop %1<br>kill %1</pre>
wr: <pre>s&<br>fg %1<br>ctrl-z<br>stop %1<br>kill %1</pre>
wr: <pre>s&<br>ctrl-z<br>fg %1<br>kill %1</pre>
ok: <pre>s&<br>fg %1<br>ctrl-z<br>kill %1</pre>
---

QuestionS: Which command "find" corresponds to the following search? Content of the directory:<pre>-rw-r--r-- 1 tb00029 staff 0 Dec 27 14:48 abc<br>-rw-r--r-- 1 tb00029 staff 0 Dec 27 14:48 abc1<br>-rw-r--r-- 1 tb00029 staff 0 Dec 27 14:48 abc11<br>-rw-r--r-- 1 tb00029 staff 0 Dec 27 14:54 abc13<br>-rw-r--r-- 1 tb00029 staff 0 Dec 27 14:48 abc2<br>-rw-r--r-- 1 tb00029 staff 0 Dec 27 14:49 abc3<br>drwxr-xr-x 2 tb00029 staff 512 Dec 27 16:10 abc4<br>drwxr-xr-x 2 tb00029 staff 512 Dec 27 16:11 abc5</pre>Result of the "find" command:<pre>drwxr-xr-x 2 tb00029 staff 512 Dec 27 16:10 ./abc4<br>drwxr-xr-x 2 tb00029 staff 512 Dec 27 16:11 ./abc5</pre>
wr: <pre>find . -name "abc[345]" -type d</pre>
wr: <pre>find . -name "abc[345]" -type d | ls -l</pre>
ok: <pre>find . -name 'abc[345]' -type d -exec ls -ld {} \;</pre>
wr: <pre>find . -name -type d -exec ls -ld {} ";"</pre>
wr: <pre>find . -name abc\[345\] -type d -exec ls -l {} \;</pre>
---

QuestionS: Which command permits root to select from the file of users? Make use of the following file content.<pre> cat /etc/passwd<br>root:!:0:0:root:/root:/usr/bin/sh<br>tb00804:!:202:1:Koen:/home/tb00804:/usr/bin/ksh<br>tb00041:!:448:1:Peter:/home/tb00041:/usr/bin/bash<br>student1:!:297:103:Student 1:/opt/bmc/pem/u/student1:/usr/bin/csh<br>student2:!:298:103:Student 2:/opt/bmc/pem/u/student2:/usr/bin/bash<br>team00:!:203:205:Student 00:/home/curaix/team00:/usr/bin/ksh<br>team01:!:204:205:Student 01:/home/curaix/team01:/usr/bin/ksh</pre>..... result of the command ...<pre>tb00029:!:202:1:Koen:/home/tb00029:/usr/bin/ksh<br>student1:!:297:103:Student 1:/opt/bmc/pem/u/student1:/usr/bin/csh<br>team00:!:203:205:Student 00:/home/curaix/team00:/usr/bin/ksh<br>team01:!:204:205:Student 01:/home/curaix/team01:/usr/bin/ksh</pre>
wr: <pre>grep '/ksh' /etc/passwd ; grep '/csh' /etc/passwd</pre>
wr: <pre>grep '/ksh' /etc/passwd | grep '/csh'</pre>
ok: <pre>grep '/[kc]sh$' /etc/passwd</pre>
wr: <pre>grep '/(k|c)sh' /etc/passwd</pre>
wr: <pre>grep '[kc]sh^' /etc/passwd</pre>
---

QuestionS: What is the meaning of the following result?<pre>echo $?<br>1</pre
wr: <pre>The variable $? has been initialized to 1 by a preceding command ($?=1).</pre>
wr: <pre>The command preceding the "echo" command ran without errors.</pre>
ok: <pre>The command preceding the "echo" command did not function correctly.</pre>
wr: <pre>The command preceding the "echo" command received one single parameter.</pre>
---
